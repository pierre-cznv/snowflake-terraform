name: pr-check-prod

on:
  pull_request:
    paths:
      - "_live/prod/**"

permissions:
  contents: read
  pull-requests: write

env:
  TF_VAR_sf_username: ${{ secrets.tf_var_sf_username }}
  TF_VAR_sf_password: ${{ secrets.tf_var_sf_password }}

jobs:
  changed-directories:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.build-json-from-array.outputs.build }}
    steps:
    - id: filter-unique-files
      name: Get Changed Files
      uses: dorny/paths-filter@v2
      with:
        list-files: shell
        filters: |
          changed:
            - 'live/prod/**'

    - id: get-unique-folders
      name: Get Changed Folders
      if: ${{ steps.filter-unique-files.outputs.changed == 'true' }}
      run: |
        for i in ${{ steps.filter-unique-files.outputs.changed_files }}
        do
          directories+=($(dirname $i))
        done
        
        sorted_unique_ids=($(echo "${directories[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))
        echo "changed_folders=${sorted_unique_ids[@]}" >> $GITHUB_OUTPUT

    - id: build-json-from-array
      name: Build JSON output
      if: ${{ steps.filter-unique-files.outputs.changed == 'true' }}
      uses: kanga333/json-array-builder@v0.1.0
      with:
        str: ${{ steps.get-unique-folders.outputs.changed_folders }}
        separator: space

  run-terraform:
    needs: changed-directories
    strategy:
      fail-fast: false
      matrix:
        folders: ${{ fromJSON(needs.changed-directories.outputs.folders) }}
    if: ${{ needs.changed-directories.outputs.folders }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.folders }}
    steps:
      - id: checkout-repo
        name: Checkout Repository
        uses: actions/checkout@v3

      - id: install-node
        name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - id: configure-aws-credentials
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600

      - id: setup-terraform
        name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
#
      - id: terraform-fmt
        name: Terraform Format
        run: terraform fmt -check
        continue-on-error: true

      - id: terraform-init
        name: Terraform Init
        run: terraform init
        continue-on-error: true

      - id: terraform-validate
        name: Terraform Validate
        run: terraform validate -no-color
        continue-on-error: true

      - id: terraform-plan
        name: Terraform Plan
        run: terraform plan -no-color
        continue-on-error: true

      - id: update-pr-prod
        name: Update Pull Request (Prod)
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### AWS Sandbox Account: 685579070140
            
            #### Terraform Format and Style üñå\`${{ steps.terraform-fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.terraform-init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.terraform-validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.terraform-plan.outcome }}\`

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - id: plan-status-check
        name: Plan Status Check
        if: steps.terraform-fmt.outcome == 'failure' || steps.terraform-plan.outcome == 'failure'
        run: exit 1

  workflow-check:
    needs:
      - changed-directories
      - run-terraform
    runs-on: ubuntu-latest
    steps:
      - id: check-success
        name: Check for Successful Job Runs
        uses: re-actors/alls-green@v1.1.0
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: changed-directories, run-terraform

