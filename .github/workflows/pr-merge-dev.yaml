name: pr-merge-dev

on:
  push:
    branches:
      - main
    paths:
      - "dev/**"

permissions:
  contents: read
  pull-requests: write

env:
  TF_VAR_sf_username: ${{ secrets.tf_var_sf_username }}
  TF_VAR_sf_password: ${{ secrets.tf_var_sf_password }}

jobs:
  changed-directories:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.build-json-from-array.outputs.build }}
    steps:
    - id: checkout-repo
      name: Checkout Repository
      uses: actions/checkout@v3

    - id: filter-unique-files
      name: Get Changed Files
      uses: dorny/paths-filter@v2
      with:
        base: ${{ github.ref }}
        list-files: shell
        filters: |
          changed:
            - 'dev/**'

    - id: get-unique-folders
      name: Get Changed Folders
      if: ${{ steps.filter-unique-files.outputs.changed == 'true' }}
      run: |
        for i in ${{ steps.filter-unique-files.outputs.changed_files }}
        do
          directories+=($(dirname $i))
        done
        
        sorted_unique_ids=($(echo "${directories[@]}" | tr ' ' '\n' | sort -u | tr '\n' ' '))
        echo "changed_folders=${sorted_unique_ids[@]}" >> $GITHUB_OUTPUT

    - id: build-json-from-array
      name: Build JSON output
      if: ${{ steps.filter-unique-files.outputs.changed == 'true' }}
      uses: kanga333/json-array-builder@v0.1.0
      with:
        str: ${{ steps.get-unique-folders.outputs.changed_folders }}
        separator: space

  run-terraform:
    needs: changed-directories
    strategy:
      fail-fast: false
      matrix:
        folders: ${{ fromJSON(needs.changed-directories.outputs.folders) }}
    if: ${{ needs.changed-directories.outputs.folders }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ matrix.folders }}
    steps:
      - id: checkout-repo
        name: Checkout Repository
        uses: actions/checkout@v3

      - id: configure-aws-credentials
        name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-west-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #role-to-assume: arn:aws:iam::395533948345:role/OrganizationAccountAccessRole
          #role-duration-seconds: 3600

      - id: setup-terraform
        name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
#
      - id: terraform-init
        name: Terraform Init
        run: terraform init
        continue-on-error: false

      - id: terraform-apply
        name: Terraform Apply
        run: terraform apply -no-color -auto-approve
        continue-on-error: false
